{"version":3,"sources":["spinner.gif","components/Navbar.jsx","components/Search.jsx","components/Spinner.jsx","components/New.jsx","components/News.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Search","state","userinput","country","category","handleinput","e","setState","target","name","value","handlesearch","preventDefault","props","search","onSubmit","this","type","placeholder","style","width","onChange","React","Component","Spinner","src","spinner","alt","margin","display","New","publishedAt","urlToImage","title","href","url","rel","News","undefined","news","from","newscount","page","to","Fragment","totalresults","map","n","i","key","justifyContent","onClick","nextpage","previouspage","App","makeurl","makesearchurl","firsttime","searched","componentDidMount","fetch","then","res","json","data","articles","totalResults","console","log","catch","alert","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76765abe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.75ae2ba2.gif\";","import React from 'react'\r\n\r\nconst Navbar =()=>{\r\n    \r\n    return (\r\n      <header className='navbar bg-success pt-3'>\r\n         <div className=\"container-fluid\">\r\n             <div className=\"web_title nav-brand text-white\">\r\n                 <span>News Search</span>\r\n             </div>\r\n             <div className=\"lead text-white \">\r\n                 <span>Search for any news across world</span>\r\n             </div>\r\n         </div>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nclass Search extends React.Component{\r\n    state={\r\n        userinput:'',\r\n        country:'in',\r\n        category:'sports'\r\n    }\r\n    handleinput=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    handlesearch=(e)=>{\r\n        e.preventDefault()\r\n        this.props.search(this.state)\r\n    }\r\n    render(){\r\n        return (\r\n          <div className='search mt-2'>\r\n              <div className=\"container\">\r\n                   <h3 className='text-center'>Search News</h3>\r\n                   <p className='lead text-center'>Find Everything Around You in Seconds</p>\r\n                   <form onSubmit={this.handlesearch}>             \r\n                    <div className='form-group'>\r\n                        <input type=\"text\" className=\"from-control form-control-lg display-block\" placeholder='Search Here' style={{width:'100%'}}  \r\n                        name='userinput'\r\n                        value={this.state.userinput} \r\n                        onChange={this.handleinput}\r\n                        />\r\n                        <br/>  \r\n                        \r\n                    </div>\r\n                        <button className={'btn btn-warning btn-lg btn-block pl-10 pr-10 mt-2'} type='submit'>Search</button>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport spinner from'../spinner.gif'\r\nfunction Spinner(){\r\n    return (\r\n      <div>\r\n          <img src={spinner} alt=\"loading.....\"\r\n          style={{width:'100px', margin:'auto', display:'block'}}/>\r\n      </div>\r\n    )\r\n}\r\nexport default Spinner","import React from 'react'\r\n\r\nclass New extends React.Component{\r\n    render(){\r\n        return (\r\n          <div className=\"col-lg-6 mb-3\">\r\n               <div className=\"card p-2\">\r\n                  <h5>Publishdate:{this.props.New.publishedAt}</h5>\r\n                  <img className=\"card-img-top\" src={this.props.New.urlToImage}   alt=\"loading\" />\r\n                  <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{this.props.New.title}</h3>\r\n                    <a href={this.props.New.url} rel=\"noopener noreferrer\" target='_blank' className=\"btn btn-primary\">See Full News</a>\r\n                  </div>\r\n                </div> \r\n          </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default New","import React from 'react'\r\nimport Spinner from './Spinner'\r\nimport New from './New'\r\n\r\nclass News extends React.Component{\r\n   \r\n//    changepage=()=>{\r\n//        this.setState({page:this.state.page+1,news:undefined})\r\n//        \r\n//    }\r\n     \r\n    render(){\r\n        const {state}=this.props\r\n        if(state.news===undefined){\r\n            return <Spinner />\r\n        }else{\r\n            const from=((state.newscount*state.page)-state.newscount)+1\r\n            const to=state.newscount*state.page\r\n            return (\r\n                <React.Fragment>\r\n              <div className='news mt-4'>       \r\n                  <div className=\"container\">\r\n                     <h4>Showing {from} to {to>=state.totalresults? state.totalresults : to} of {state.totalresults}</h4>\r\n                      <div className=\"row\">\r\n                         {\r\n                              state.news.map((n,i)=>{\r\n                              return    <New New={n} key={i}/>\r\n                              })\r\n                          }\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className='container' style={{justifyContent:'space-between',display:'flex'}}>\r\n                  {to<=state.totalresults?\r\n                      <button className=\"btn btn-warning pr-4 pl-4\" onClick={this.props.nextpage}>\r\n                      Next\r\n                       </button> : null}\r\n                  {state.page>1 ? \r\n                  <button className=\"btn btn-warning pr-4 pl=4\" onClick={this.props.previouspage}>\r\n                          Previous\r\n                  </button>\r\n                      : null\r\n                  \r\n                  }\r\n              </div>\r\n              </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default News","import React from 'react';\nimport './bootstrap.min.css';\nimport Navbar from './components/Navbar'\nimport Search from './components/Search'\nimport News from './components/News'\n\nclass App extends React.Component {\n     state={\n        url:undefined,\n        news:undefined,\n        page:1,\n        newscount:20,\n        totalresults:0,\n        country:'in',\n        category:'sports',\n        makeurl:function(){\n            this.url=`https://newsapi.org/v2/top-headlines?country=${this.country}&apiKey=a7e2cf60cb044eff90c8d0ddef25945e&pagesize=${this.newscount}&page=${this.page}`\n        },\n         makesearchurl:function(){\n             this.url=`https://newsapi.org/v2/everything?q=${this.userinput}&apiKey=a7e2cf60cb044eff90c8d0ddef25945e&pagesize=${this.newscount}&page=${this.page}`\n         },\n         firsttime:true,\n         searched:false\n    }\n      constructor(){\n         super()\n         this.state.makeurl()\n     }\n     nextpage=()=>{\n         this.setState({page:this.state.page+1},()=>{\n             this.componentDidMount()\n         })    \n     }\n     previouspage=()=>{\n         this.setState({page:this.state.page-1},()=>{\n             this.componentDidMount()\n         })\n     }\n     search=(state)=>{\n         \n       this.setState({\n        news:undefined,\n        userinput:state.userinput,\n        page:1,\n        searched:true\n       },()=>{\n           this.state.makesearchurl()\n        fetch(this.state.url)\n              .then(res=>res.json())\n              .then(data=>{       \n                this.setState({news:data.articles,totalresults:data.totalResults})   \n              })\n     }\n    )}\n    \n    componentDidMount(){    \n        if(this.state.firsttime===true && this.state.searched===false){\n            this.setState({firsttime:false})\n            this.state.makeurl()\n        }else if(this.state.firsttime===false && this.state.searched===true){\n            this.state.makesearchurl()\n        }\n        this.setState({news:undefined})\n        fetch(this.state.url)\n            .then(res=>res.json())\n            .then(data=>{\n               console.log(data)\n               this.setState({news:data.articles,totalresults:data.totalResults})\n            })\n            .catch(e=>{\n               alert('cannot fetch data')\n            })\n      }\n    render(){\n         return (\n            <React.Fragment>\n               <Navbar />\n               <Search search={this.search}/>\n               <News state={this.state} nextpage={this.nextpage} previouspage={this.previouspage}/>\n            </React.Fragment>\n          );\n    }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}